<?php

/** 
 * For more info: https://developer.wordpress.org/themes/basics/theme-functions/
 *
 */
 
// Theme support options
require_once(get_template_directory() . '/functions/theme-support.php');

//Custom ACF Block Registration
require_once(get_template_directory() . '/functions/block-registration.php');

// WP Head and other cleanup functions
require_once(get_template_directory() . '/functions/cleanup.php');

// Register scripts and stylesheets
require_once(get_template_directory() . '/functions/enqueue-scripts.php');

// Register custom menus and menu walkers
require_once(get_template_directory() . '/functions/menu.php');

// Register sidebars/widget areas
// require_once(get_template_directory().'/functions/sidebar.php'); 

// Makes WordPress comments suck less
// require_once(get_template_directory().'/functions/comments.php'); 

// Replace 'older/newer' post links with numbered navigation
require_once(get_template_directory() . '/functions/page-navi.php');

// Adds support for multiple languages
require_once(get_template_directory() . '/functions/translation/translation.php');

// Adds site styles to the WordPress editor
// require_once(get_template_directory().'/functions/editor-styles.php'); 

// Remove Emoji Support
// require_once(get_template_directory().'/functions/disable-emoji.php'); 

// Related post function - no need to rely on plugins
// require_once(get_template_directory().'/functions/related-posts.php'); 

// Use this as a template for custom post types
// require_once(get_template_directory().'/functions/custom-post-type.php');

// Customize the WordPress login menu
// require_once(get_template_directory().'/functions/login.php'); 

// Customize the WordPress admin
// require_once(get_template_directory().'/functions/admin.php');

/* ORDER team by menu order front end and dashboard */
add_action('pre_get_posts', 'better_sort_order');
function better_sort_order($query)
{
	if (is_post_type_archive('cpt_team_profile')) :
		$query->set('order', 'ASC');
		$query->set('orderby', 'menu_order');
		$query->set('posts_per_archive_page', 99);
	endif;
};


//Make the color picker defaults brand colors 
function my_acf_input_admin_footer()
{

?>
	<script type="text/javascript">
		(function($) {

			acf.add_filter('color_picker_args', function(args, $field) {

				// do something to args
				args.palettes = ['#1C1C1C', '#262626', '#F98A3C', '#FFF', '#000', '#005E84', '#480F73']


				// return
				return args;

			});

		})(jQuery);
	</script>
<?php

}

add_action('acf/input/admin_footer', 'my_acf_input_admin_footer');

// add a column to the post type's admin
// basically registers the column and sets it's title
add_filter('manage_' . 'videos' . '_posts_columns', function ($columns) {
	$columns['client'] = "Client";
	return $columns;
});

// display the column value
add_action('manage_' . 'videos' . '_posts_custom_column', function ($column_name, $post_id) {
	if ($column_name == 'client') {
		echo get_post_meta($post_id, 'client', true);
	}
}, 10, 2); // priority, number of args - MANDATORY HERE!


/** FACET ALWAYS TRUE **/
add_filter('pre_get_posts', function ($query) {
	if ($query->is_archive() && $query->is_main_query()) {
		$query->set('facetwp', true);
	}
}, 9);

/** REORDER VIDEO FACETS **/
add_filter('facetwp_facet_orderby', function ($orderby, $facet) {
	if ('video_type' == $facet['name']) {
		$orderby = 'FIELD(f.facet_display_value, "Commercials", "Brand Content", "Impact Films", "Corporate", "Test", "Element Post")';
	}
	return $orderby;
}, 10, 2);

/** add additional classes / id to the facetwp-template div generated by a facetwp 
 ** layout template
 **/
add_filter('facetwp_shortcode_html', function ($output, $atts) {
	if ($atts['template'] = 'gimme_news') { // replace 'example' with name of your template
		/** modify replacement as needed, make sure you keep the facetwp-template class **/
		$output = str_replace('class="facetwp-template"', 'id="masonry-container" class="facetwp-template grid"', $output);
	}
	return $output;
}, 10, 2);

register_nav_menus(array(
	'offcanvas-nav' => __('Offcanvas Menu'),
));
// Add Bootstrap classes to menu li and a
function add_additional_class_on_li($classes, $item, $args)
{
	if ($args->theme_location === 'offcanvas-nav') {
		$classes[] = 'nav-item';
	}
	return $classes;
}
add_filter('nav_menu_css_class', 'add_additional_class_on_li', 1, 3);

function add_menu_link_class($atts, $item, $args)
{
	if ($args->theme_location === 'offcanvas-nav') {
		$atts['class'] = 'nav-link';
	}
	return $atts;
}
add_filter('nav_menu_link_attributes', 'add_menu_link_class', 1, 3);




